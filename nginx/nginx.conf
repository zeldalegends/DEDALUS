events { }

http {

  set $my_domain $INSERT_YOUR_DOMAIN_HERE

  # include /etc/nginx/mime.types;

  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
  # add_header X-Frame-Options "SAMEORIGIN";
  # add_header Referrer-Policy "origin";
  # add_header Content-Security-Policy "default-src 'self';"

  # server_tokens off;

  # Enable CORS
  # add_header 'Access-Control-Allow-Origin' '*';

  server {
    listen 80;
    listen [::]:80;
    server_name $my_domain;
    # charset utf-8;

    location ~ /.well-known/acme-challenge {
      allow all;
      root /var/www/certbot;
    }

    location / {
      # rewrite ^ https://$host$request_uri? permanent;
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443;
    server_name $my_domain;
    # charset utf-8;

    # ssl_certificate /etc/letsencrypt/live/smartenergy.duckdns.org/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/smartenergy.duckdns.org/privkey.pem;
    ssl_certificate /etc/letsencrypt/live/$my_domain/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$my_domain/privkey.pem;

    # ssl_certificate /etc/ssl/certificate.crt;
    # ssl_certificate_key /etc/ssl/private.key;

    # ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    # ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
    # ssl_verify_depth 3;

    # ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_cache shared:SSL:50m;
    # ssl_session_timeout 1440m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # to generate your dhparam.pem file, run in the terminal
    # openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # ssl_prefer_server_ciphers off;
    # ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_ciphers "DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-CHACHA20-POLY1305";

    # access_log /var/log/nginx/nginx.vhost.access.log;
    # error_log /var/log/nginx/nginx.vhost.error.log;

    #=================#
    # Reverse proxies #
    #=================#

    location /checkHeaders {
      proxy_pass http://172.17.0.1:1880/check/;
      proxy_set_header document_root             $document_root;
      proxy_set_header host                      $host;
      proxy_set_header hostname                  $hostname;
      proxy_set_header http_host                 $http_host;
      proxy_set_header http_upgrade              $http_upgrade;
      proxy_set_header http_user_agent           $http_user_agent;
      proxy_set_header http_x_forwarded_for      $http_x_forwarded_for;
      proxy_set_header nginx_version             $nginx_version;
      proxy_set_header proxy_add_x_forwarded_for $proxy_add_x_forwarded_for;
      proxy_set_header remote_addr               $remote_addr;
      proxy_set_header remote_addr               $remote_addr;
      proxy_set_header remote_port               $remote_port;
      proxy_set_header request_id                $request_id;
      proxy_set_header request_uri               $request_uri;
      proxy_set_header scheme                    $scheme;
      proxy_set_header server_addr               $server_addr;
      proxy_set_header server_port               $server_port';
      proxy_set_header time_local                $time_local;
    }

    location /ip {
        proxy_pass http://ifconfig.me;
        rewrite ^/ip/(.*)$ /$1 break;
    }

    location /v3 {
      proxy_pass http://node-red:1880/v3;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_buffers 4 256k;
      proxy_buffer_size 128k;
      proxy_busy_buffers_size 256k;
      # proxy_buffering off;
    }

#    # location ~ ^/(editor|ui)/ {
#    location / {
#      proxy_pass http://172.17.0.1:4041/;
#
#      proxy_http_version 1.1;
#      proxy_set_header Upgrade $http_upgrade;
#      proxy_set_header Connection "upgrade";
#
#      proxy_set_header Host $host;
#      proxy_set_header X-Real-IP $remote_addr;
#      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#      proxy_set_header X-Forwarded-Proto $scheme;
#
#      #proxy_hide_header Access-Control-Allow-Origin;
#      #add_header Access-Control-Allow-Origin $http_origin;
#      
#      #proxy_buffers 4 256k;
#      #proxy_buffer_size 128k;
#      #proxy_busy_buffers_size 256k;
#    }

    # Keyrock
    location /keyrock/ {
      proxy_set_header    X-Forwarded-Host   $host;
      proxy_set_header    Host               $host;
      proxy_set_header    X-Real-IP          $remote_addr;
      proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
      rewrite ^/keyrock(/.*)$  $1 break;

      proxy_pass http://keyrock:3005;
      proxy_redirect / /keyrock/;
      sub_filter '="/' '="/keyrock/';
      sub_filter '= "/' '= "/keyrock/';
      sub_filter '=\'/' '=\'/keyrock/';

      sub_filter_once off;
    }

    location /idm/ {
      proxy_pass http://keyrock:3005;
    }

    location /img/ {
      proxy_pass http://keyrock:3005;
    }

    # Orion
    location /orion/ {
      proxy_pass http://orion-proxy:1027;
      rewrite ^/orion/(.*)$ /$1 break;
    }

    location /v2 {
      proxy_pass http://orion-proxy:1027;
    }

    location /ngsi-ld {
      proxy_pass http://orion-proxy:1027;
    }

    # Blockchain
    location /rpc {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_pass http://ganache:8545/;
    }

    #=============#
    # Web servers #
    #=============#

  # # Nginx web server (/home/www/public_html/localhost/public/uploads)
  # location /uploads
  #   root /home/www/public_html/localhost/public;
  #   autoindex on;
  # }

    # Nginx web server (/home/www/public_html/localhost/public)
    location /public {
      root /home/www/public_html/localhost;
      autoindex on;
    }

    #===========#
    # Redirects #
    #===========#

    location / {
  #     return 301 https://$host/public/home;
        return 301 /public/home;
    }

  # error_page 500 502 503 504 /5xx.html;
  # location /5xx.html {
  #   root /www/error_pages/;
  # }
  }
}
