# List the start up tasks. Learn more https://www.gitpod.io/docs/config-start-tasks/
tasks:
  - name: utils
    init: |
      docker pull efrecon/mqtt-client
      echo -e "\033[1;44mSome useful commands\033[0m"
      echo -e "\033[1;32mNode.js\033[0m"
      node -e "console.log(require('os').version())"
      echo -e "\033[1;33mGitpod\033[0m"
      (gp ports list 2> /dev/null) || true
      gp top
      echo -e "\033[1;31mMySQL\033[0m"
      echo -e "\033[0;32mGenerate hash for access token\033[0m"
      node -e "console.log(require('crypto').createHash('sha3-256').update('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx').digest('hex'))"
      echo -e "\033[0;32mmMySQL dump and restore\033[0m"
      echo "docker exec db-mysql /usr/bin/mysqldump --databases -u root --password=secret idm > backup.sql"
      echo "cat backup.sql | docker exec -i db-mysql /usr/bin/mysql -u root --password=secret idm"
      echo -e "\033[1;34mMQTT\033[0m"
      docker run -it --rm --name mqtt-subscriber --network fiware_default efrecon/mqtt-client sub -h mosquitto -t "/#"
      docker run -it --rm --name mqtt-publisher --network fiware_default efrecon/mqtt-client pub -h mosquitto -m "Hi!" -t "/test"
      echo -e "\033[1;36mDocker\033[0m"
      docker exec -it db-mysql /bin/bash
      docker logs fiware-orion -f
      docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
  - name: build
    init: docker compose pull # runs during prebuild
    command: |
      echo Welcome to FIWARE
      docker compose -p fiware down -v --remove-orphans
      docker compose -p fiware up -d --remove-orphans --build
      echo Waking up FIWARE Node-RED app on Replit...
      curl https://hyperride.engsep.repl.co/gitpod -d url=$(node -e "console.log(require('process').env.GITPOD_WORKSPACE_URL)")
      curl https://bd4nrg.engsep.repl.co/gitpod -d url=$(node -e "console.log(require('process').env.GITPOD_WORKSPACE_URL)")

# List the ports to expose. Learn more https://www.gitpod.io/docs/config-ports/
ports:
  - name: Apache Server 
    description: LD @context files
    port: 80
    onOpen: ignore
  - name: Orion + Wilma
    description: Context Broker+PEP Proxy
    port: 1026
    onOpen: ignore
    visibility: public
  - name: Orion-LD + Wilma
    description: Context Broker+PEP Proxy
    port: 1027
    onOpen: ignore
    visibility: public
  - name: Orion
    description: Context Broker (direct)
    port: 10260
    onOpen: ignore
  - name: Orion-LD
    description: Context Broker (direct)
    port: 10270
    onOpen: ignore
  - name: Keyrock
    description: Identity Manager (IdM)
    port: 3005
    onOpen: open-preview
    visibility: public
  - name: MongoDB
    description: DB for Orion
    port: 27017
    onOpen: ignore
  - name: Mongo Express
    description: MongoDB frontend
    port: 8081
    onOpen: ignore
    visibility: public
  - name: MySQL
    description: DB for Keyrock
    port: 3306
    onOpen: ignore
  - name: Adminer
    description: MySQL frontend
    port: 8080
    onOpen: ignore
    visibility: public
  - name: Ganache
    description: Truffle Blockchain
    port: 8545
    onOpen: ignore
  - name: Alethio Lite Explorer
    description: Blockchain frontend
    port: 8082
    onOpen: ignore
    visibility: public
  - name: Node-RED
    description: Custom IoT Agent
    port: 8880
    onOpen: open-browser
    visibility: public
  - name: Eclipse MosQuiTTo
    description: MQTT Broker
    port: 8883
    onOpen: ignore
    visibility: public
  - name: Eclipse MosQuiTTo
    description: MQTT Broker+Websocket
    port: 9001
    onOpen: ignore
    visibility: public
